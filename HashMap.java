import java.util.Arrays;public class HashMap {    private int size;    private int[] array = new int[5];    public int getSize() {        return size;    }    public void dataItem (int data, int key){    }    public void setSize(int size) {        this.size = size;    }    public int hashCode(int key) {        return key % size;    }    public void insert(int key, int value){        int index = hashCode(key);        //Linear Probing        /*As we can see, it may happen that the hashing technique is used to create an already used        index of the array. In such a case, we can search the next empty location in the array by        looking into the next cell until we find an empty cell. This technique is called linear probing.*/        if(array[index]!=0) {            for (int i = index-1; i < array.length; i++) {                if (array[i] == 0) {                    array[i] = value;                } else {                    i++;                }            }        }else{            array[index] = value;        }    }    public int getValue(int key){        return array[hashCode(key)];    }    public void printList(){        System.out.println(Arrays.toString(array));    }    public static void main(String[] args) {    HashMap hMap = new HashMap();    hMap.setSize(20);    hMap.insert(4,1);    hMap.insert(1,2);    hMap.insert(42,3);    hMap.insert(22,4);    System.out.println(hMap.getValue(42));    }}